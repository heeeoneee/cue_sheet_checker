다음은 제공하신 내용을 바탕으로 작성한 GitHub README.md 파일입니다.

-----

# 스케줄 분석 및 검색 도구

이 프로그램은 CSV 형식의 스케줄 표를 분석하여 효율적인 인력 배치를 돕는 명령줄 인터페이스(CLI) 도구입니다.

## ⚙️ 환경 준비

스크립트를 실행하기 위해 몇 가지 사전 준비가 필요합니다. Google API 인증 설정과 필수 파이썬 라이브러리 설치를 진행합니다.

### 1\. Google API 인증 설정

이 도구는 Google Drive 및 Sheets API를 사용하여 데이터를 처리합니다. 로컬 환경에서 API를 사용하려면 다음 절차에 따라 `credentials.json` 파일을 발급받아야 합니다.

#### **절차**

1.  **Google Cloud Console 접속**: [Google Cloud Console](https://console.cloud.google.com/)에 접속하여 새 프로젝트를 만들거나 기존 프로젝트를 선택합니다.
2.  **API 활성화**: 왼쪽 메뉴에서 **API 및 서비스 \> 라이브러리**로 이동합니다.
      * `Google Drive API` 검색 후 **'사용'** 버튼을 클릭하여 활성화합니다.
      * `Google Sheets API` 검색 후 **'사용'** 버튼을 클릭하여 활성화합니다.
3.  **사용자 인증 정보(Credentials) 생성**:
      * **API 및 서비스 \> 사용자 인증 정보**로 이동합니다.
      * 상단의 \*\*[+ 사용자 인증 정보 만들기] \> [OAuth 2.0 클라이언트 ID]\*\*를 선택합니다.
      * 애플리케이션 유형을 \*\*'데스크톱 앱'\*\*으로 선택하고 이름을 지정한 후 \*\*'만들기'\*\*를 클릭합니다.
4.  **`credentials.json` 파일 다운로드**:
      * 생성이 완료되면 목록에 새로 만든 '데스크톱 앱' 클라이언트가 나타납니다.
      * 오른쪽 끝에 있는 \*\*다운로드 아이콘(↓)\*\*을 클릭하여 `credentials.json` 파일을 다운로드합니다.
      * 다운로드한 파일을 **파이썬 스크립트가 있는 로컬 프로젝트 폴더**로 이동시킵니다.

### 2\. 필수 라이브러리 설치

아래 명령어를 사용하여 필요한 파이썬 라이브러리를 설치합니다.

```bash
pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib
```

### 3\. 스크립트 최초 실행 및 인증

`credentials.json` 파일이 프로젝트 폴더에 있는 상태에서 파이썬 스크립트를 최초로 실행하면, 인증 절차가 시작됩니다.

1.  스크립트를 실행하면 자동으로 웹 브라우저가 열립니다.
2.  브라우저에서 API 접근을 허용할 Google 계정으로 로그인합니다.
3.  권한 요청 화면에서 \*\*'허용'\*\*을 클릭합니다.
4.  인증이 완료되면 로컬 폴더에 `token.json`(또는 `token.pickle`) 파일이 생성됩니다. 이후 스크립트를 실행할 때는 이 토큰을 사용해 자동으로 인증이 이루어집니다.

-----

## 🚀 사용 방법

### 1\. 파일 경로 수정

스크립트(`schedule_check.py`)를 실행하기 전, 코드 하단의 `if __name__ == "__main__":` 블록에서 분석할 CSV 파일의 경로를 **본인의 컴퓨터 환경에 맞게** 수정해야 합니다.

```python
if __name__ == "__main__":
    # ▼▼▼ 아래 두 줄의 파일 경로를 반드시 수정하세요 ▼▼▼
    schedule_file = '/path/to/your/2025 KYSA 운영위원 통합 큐시트_도우미 명단.csv'
    helper_list_file = '/path/to/your/2025 KYSA 운영위원 통합 큐시트_도우미 배정용.csv'
    
    analyze_and_search(schedule_file, helper_list_file)
```

### 2\. 스크립트 실행

파일 경로 수정 후, 터미널(명령 프롬프트, PowerShell 등)에서 아래 명령어를 차례로 입력해 스크립트를 실행합니다.

```bash
# 1. 구글 시트에서 최신 데이터를 가져옵니다.
sh 1_import_all_sheets.py

# 2. 스케줄 분석 및 검색 기능을 실행합니다.
python schedule_check.py
```

> **참고**: 이 스크립트는 Python 3.12.10 환경에서 테스트되었습니다. 다른 버전에서도 호환될 가능성이 높습니다.

-----

## 🔍 검색 기능 사용

`schedule_check.py`가 실행되어 초기 분석이 완료되면, 터미널에 검색어 입력창이 나타납니다. 아래 형식에 맞춰 다양한 조건으로 스케줄을 검색할 수 있습니다.

### 👨‍💻 개인 일정 검색

특정 인원의 전체 스케줄을 확인합니다.

  * **입력 형식**: `이름`
  * **예시**: `홍길동`

### ⏰ 특정 시점 가능 인원 검색

지정한 요일과 시간에 업무가 없는 인원을 모두 찾아 목록으로 보여줍니다.

  * **입력 형식**: `요일 시간`
  * **예시**: `금 10:00`

### 🗓️ 특정 기간 가능 인원 검색

지정한 요일의 시작 시간과 종료 시간 사이에 계속 업무가 없는 인원을 검색합니다.

  * **입력 형식**: `요일 시작시간 종료시간`
  * **예시**: `토 13:00 15:30`

### 🚪 종료

검색 프로그램을 종료합니다.

  * **입력**: `종료` 또는 `exit`
